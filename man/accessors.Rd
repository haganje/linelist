% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_epivars.R, R/set_vars.R
\name{get_epivars}
\alias{get_epivars}
\alias{date_of_onset}
\alias{date_onset}
\alias{id}
\alias{gender}
\alias{date_report}
\alias{age}
\alias{age_group}
\alias{geo}
\alias{set_epivars}
\alias{set_epivars<-}
\alias{set_epivars.linelist}
\alias{set_epivars<-.linelist}
\title{Accessor functfons}
\usage{
get_epivars(x, ..., simplify = TRUE)

date_of_onset(x)

date_onset(x)

id(x)

gender(x)

date_report(x)

age(x)

age_group(x)

geo(x)

set_epivars(x, ...)

set_epivars(x, name) <- value

\method{set_epivars}{linelist}(x, ...)

\method{set_epivars}{linelist}(x, name) <- value
}
\arguments{
\item{x}{a linelist object}

\item{...}{epi variables to be used; can be provided as characters, integers,
or logical; integers and logicals are to be matched against the vector of
epi variables returned by \code{list_epivars(x, simple = TRUE)}.}

\item{simplify}{if \code{TRUE} (default) and a single epivar is specified, it will
be converted to a \code{vector}. Otherwise, a data frame is returned.}

\item{name}{the name of the variable in \code{\link[=get_dictionary]{get_dictionary()}} to assign}

\item{value}{the name of the column in the locations data}
}
\value{
a vector if the epivar can be represented by a single column, a data
frame otherwise (e.g. a location column).
}
\description{
This set of fucntions defines helper functions for accessing pre-defined
epivars in your linelist object.
}
\note{
For the "geo" epivar, which necessarily contains two columns for
longitude and latitude data, when \code{simplify = TRUE}, a matrix will be
returned.
}
\examples{

## make toy data
toy_data <- messy_data()
cleaned_data <- clean_data(toy_data)
ll <- as_linelist(cleaned_data, 
                  id = "id", 
                  date_onset = "date_of_onset",
                  gender = "gender",
                  geo = c("lon", "lat"))

## general purpose accessor
list_epivars(ll, simple = TRUE)
get_epivars(ll) # all epi variable
get_epivars(ll, "id", "date_onset", "gender") # named epi variables
date_of_onset(ll)
id(ll)
gender(ll)
geo(ll) # a matrix with two columns
get_epivars(ll, "geo", simplify = FALSE) # a data frame with two columns

# epivars that haven't been defined for the data set will return an error
try(date_report(ll))
}
