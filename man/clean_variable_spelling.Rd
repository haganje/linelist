% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_variable_spelling.R
\name{clean_variable_spelling}
\alias{clean_variable_spelling}
\title{Check and clean spelling or codes of multiple variables in a data frame}
\usage{
clean_variable_spelling(x = data.frame(), dicts = list(),
  group = NULL, sort_by = NULL, classes = NULL)
}
\arguments{
\item{x}{a \code{data.frame}}

\item{dicts}{a named list of dictionaries that define dictionaries for
specific columns.}

\item{group}{a character if \code{dicts} is a data frame, this defines the column
to be used for splitting the data frame into groups.}

\item{sort_by}{a character if \code{dicts} is a data frame, this defines the column
to be used for sorting the values.}

\item{classes}{a vector of class definitions for each of the columns. If this
is not provided, the classes will be read from the columns themselves.
Practically, this is used in \code{\link[=clean_data]{clean_data()}} to mark columns as protected.}
}
\value{
a data frame with re-defined data based on the dictionary
}
\description{
Check and clean spelling or codes of multiple variables in a data frame
}
\examples{

yesno <- c("Y", "N", "U", NA)
dyesno <- c("Yes", "No", "Unknown", "missing")
treatment_administered <- c(0:1, NA)
dtreatment_administered <- c("Yes", "No", "missing")
facility <- 1:10
dfacility <- sprintf("Facility \%s", format(1:10))
age_group <- c(0, 10, 20, 30, 40, 50)
dage_group <- c("0-9", "10-19", "20-29", "30-39", "40-49", "50+")

dict <- data.frame(
  options = c(yesno, treatment_administered, facility, age_group),
  values  = c(dyesno, dtreatment_administered, dfacility, dage_group),
  stringsAsFactors = FALSE
)
dict$grp <- rep(c("readmission", "treatment_administered", "facility", "age_group"),
                c(4, 3, 10, 6))


dat <- data.frame(
  readmission = sample(yesno, 20, replace = TRUE),
  treatment_administered = sample(treatment_administered, 20, replace = TRUE),
  facility = sample(facility, 20, replace = TRUE),
  age_group = sample(age_group, 20, replace = TRUE),
  stringsAsFactors = FALSE
)

clean_variable_spelling(dat, dicts = dict, group = "grp")
}
\author{
Zhian N. Kamvar
}
