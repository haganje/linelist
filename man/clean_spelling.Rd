% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_spelling.R
\name{clean_spelling}
\alias{clean_spelling}
\title{Rename values in a vector based on a wordlist}
\usage{
clean_spelling(x = character(), wordlist = data.frame())
}
\arguments{
\item{x}{a character or factor vector}

\item{wordlist}{a two-column matrix or data frame defining mis-spelled
words in the first column and replacements in the second column.}
}
\value{
a vector of the same type as \code{x} with mis-spelled labels cleaned.
Note that factors will be arranged by the order presented in the data
wordlist.
}
\description{
This function provides an interface for \code{\link[forcats:fct_recode]{forcats::fct_recode()}} and
\code{\link[forcats:fct_explicit_na]{forcats::fct_explicit_na()}} in such a way that a data wordlist can be
imported from a data frame.
}
\examples{

corrections <- data.frame(
  bad = c("foubar", "foobr", "fubar", NA, "unknown"),
  good = c("foobar", "foobar", "foobar", "missing", "missing"),
  stringsAsFactors = FALSE
)
head(corrections)
my_data <- c(letters[1:5], sample(corrections$bad, 10, replace = TRUE))
clean_spelling(my_data, corrections)

# The function will give you a warning if the wordlist does not
# match the data
clean_spelling(letters, corrections)

# The can be used for translating survey output

dict <- data.frame(
  option_code = c("Y", "N", "U", NA),
  option_name = c("Yes", "No", "Unknown", "Missing"),
  stringsAsFactors = FALSE
)
clean_spelling(c("Y", "Y", NA, "N", "U", "U", "N"), dict)

}
\seealso{
\code{\link[=clean_variable_spelling]{clean_variable_spelling()}} for an implementation that acts across
multiple variables in a data frame.
}
\author{
Zhian N. Kamvar
}
