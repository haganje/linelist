% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_data.R
\name{clean_data}
\alias{clean_data}
\title{Clean a data.frame}
\usage{
clean_data(x, sep = "_", force_Date = TRUE, guess_dates = TRUE,
  error_tolerance = 0.5, protect = NULL, ...)
}
\arguments{
\item{x}{a \code{data.frame}}

\item{sep}{The separator used between words, and defaults to the underscore
\code{_}.}

\item{force_Date}{a \code{logical} or \code{integer} vector indicating the columns . If \code{logical}, indicating if \code{POSIXct} and \code{POSIXlt} objects should be converted to \code{Date} objects; defaults to \code{TRUE}; you should use this if your dates are only precise to the day (i.e. no time information within days).}

\item{guess_dates}{a \code{logical} indicating if dates should be guessed in
columns storing character strings or \code{factors}; this feature is
experimental; see \code{\link[=guess_dates]{guess_dates()}} for more information.}

\item{error_tolerance}{a number between 0 and 1 indicating the proportion of
entries which cannot be identified as dates to be tolerated; if this
proportion is exceeded, the original vector is returned, and a message is
issued; defaults to 0.1 (10 percent)}

\item{protect}{a logical or numeric vector defining the columns to protect
from any manipulation.}

\item{...}{further arguments passed on to \code{\link[=guess_dates]{guess_dates()}}}
}
\value{
A \code{data.frame} with standardised labels for characters and
factors.
}
\description{
This function applies several cleaning procedures to an input \code{data.frame},
by standardising variable names, labels used categorical variables
(characters of factors), and setting dates to \code{Date} objects. Optionally, an
intelligent date search can be used on character strings to extract dates
from various formats mixed with other text. See details for more information.
}
\examples{

## make toy data
toy_data <- messy_data()

## show data
toy_data


## clean variable names, store in new object, show results
clean_data <- clean_data(toy_data, error_tolerance = 0.1)
clean_data

clean_data2 <- clean_data(toy_data, error_tolerance = 0.8)
clean_data2

## clean variable names, but keep our "messy/dates" column
to_protect <- names(toy_data) \%in\% "messy/dates"
clean_data3 <- clean_data(toy_data, 
                          error_tolerance = 0.8,
                          protect = to_protect
                         )
clean_data3
}
\author{
Thibaut Jombart
}
